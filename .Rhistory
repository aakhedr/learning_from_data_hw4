q()
q()
for (i = 1:10) {}
for (i in 1:10) {}
q()
for (i in 1:5) { print i }
x <- c("a", "b", "c", "d")
for(i in 1:4) {print(x[i]) }
for (i in 1:5) {print(i)}
for (letter in x) {print(letter)}
for (i in seq_along(x)) {print(i)}
x <- matrix(1:6, 2, 3)
x
?matrix
seq_len(x)
seq_len(nrow(x))
seq_len(ncol(x))
?seq_len
y <- c(1, 2, 3, 4)
seq_len(y)
y
seq_len(y)
y
seq_len(length(y))
size(x)
?size
args(cat)
args(paste)
args(lm)
x
cl()
add2 <- function(x, y) {
x + y
}
add2(3, 5)
above10 <- function(x) {
x[x > 10]
}
above10(c(1, 2, 15, 20, 30))
martix(1:10, 2, 5)
matrix(1:10, 2, 5)
x <- matrix(1:10, 2, 5)
mean(x)
mean(x[, 1:5])
mean(x[, 1])
length(x)
length(x, 1)
?length
seq_len(nrow(x))
length(x[,1])
length(x[1,])
mean(x[])
colMean <- function(x) {
means <- numeric(nc)
for(i = 1: ncol(x)) {
means(i) <- mean(x[, i])
}
}
colMean <- function(x) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means(i) <- mean(x[, i])
}
}
x <- matrix(1:10, 2, 5)
colMean(x)
means <- numeric(10)
means
ncol(x)
means <- numerix(ncol(x))
means <- numeric(ncol(x))
means
means(1)
colMean <- function(x) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i])
}
}
x
colMean(x)
colMean <- function(x) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i])
}
means
}
x
colMean(x)
colMean <- function(x) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i])
}
}
x
colMean(x)
colMean(x)
y <- colMean(x)
y
args(mean)
?mean
y <- matrix(1:8, 2, 5)
y <- matrix(1:10, 2, 5)
y[2,4] <- NA
y[1, 2] <- NA
y
colMean(y)
colMean <- function(x, removeNA=TRUE) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i], na.rm=removeNA)
}
means
}
colMean(y)
colMean <- function(x, removeNA=FALSE) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i], na.rm=removeNA)
}
means
}
colMean(y)
colMean <- function(x, removeNA=TRUE) {
means <- numeric(ncol(x))
for(i in 1: ncol(x)) {
means[i] <- mean(x[, i], na.rm=removeNA)
}
means
}
colMean(y)
y
z <- matrix(1:10, 2, 5)
z > 5
z[z > 5]
z
z[, z > 5]
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x > 5
x <- 0
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
q()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(1:10)
str(set)
get()
x <- 1:10
makeVector(x)
get(x)
getmean()
l <- makeVector(x)
l$sget()
l[get]
l[[get]]
l$get
l$get(x)
l$get()
l$set
l$set(x)
l$getmean
l$getmean()
q()
library('datasets')
data('iris')
iris
?iris
sepallength('virginica')
sepal.length('virginica')
iris[sepal.length]
x <- iris[Sepal.Length]
x <- iris[1,]
x
x <- iris[, 1]
x
x <- iris['virginica', 'Sepal.Length']
x
m <- mean(iris['virginica', 'Sepal.Length'])
m
m <- mean(iris[101:150, 'Sepal.Length'])
x <- iris[,'Species'='virginica']
names(iris)
sp <- iris$Species
sp
sp< -iris$Species['virginica']
iris#Species = 'virginica'
clear
mean(iris[iris$virginica,'Sepal.Length'])
mean(iris[101:150, 'Sepal.Length'])
apply(iris, 1, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
mean(iris[,'Sepal.Length'])
library(datasets)
data(mtcars)
library(datasets)
data(mtcars)
summary(mtcars)
str(mtcars)
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean
)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
debug(ls)
ls
ls()
exit
q()
help
help
q
library(datasets)
data('mtcars')
str(mtcars)
mtcars
mean(mtcars['cyl'=4,'hp'])
mean(mtcars[, 'hp'])
?which
x <- mtcars$cyl
y <- mtcars$mpg
z <- c(x, y)
z
w <- tapply(mtcars$mpg, mtcars$cyl, mean)
w
tapply(mtcars$hp, mtcars$cyl, abs)
m <- tapply(mtcars$hp, mtcars$cyl, mean)
m
abs(82.63636 - 209.21429)
library(datasets)
data(iris)
str(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris[1:4], mean)
tapply(iris[, 1:4], mean)
tapply(iris[,1:4], 2, mean)
apply(iris[,1:4], 2, mean)
mean(iris$Sepal.Length)
mean(iris$Sepal.Width)
data(mtcars)
str(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
debug(ls)
ls()
set.seed(1)
rpois(5, 2)
?rnorm
rnorm(10)
str(lm)
str(str)
str(lm)
x <- rnorm(100, 10, 4)
str(x)
summary(x)
x <- rnorm(10, 10, 2)
x
library(datasets)
head(airquality)
str(airquality)
s <- split(airquality$Month)
s <- split(airquality, airquality$Month)
str(s)
s$Ozone
q()
rnorm(10)
x <- rnorm(10)
x
z <- dnorm(x)
z
x <- rnorm(10, 10, 1)
x
y <- dnorm(x)
y
pnorm(y)
qnorm(y)
?rbinom
set.seed(10)
x <- rbinom(10, 10, .5)
x
e <- rnorm(10, 0, 20)
e
y <- .5 + 2 * x + e
y
?ppois
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- .5 + 2 * x + e
summary(y)
plot(x, y)
x <- rbinom(100, 1, .5)
y <- .5 + 2 * x + e
plot(x, y)
x <- rnorm(100)
log.mu <- .5 + .3 * x
y <- rpois(100, exp(log.mu))
plot(x, y)
sample(1:10)
sample(1:10)
sample(1:10, replace=true)
sample(1:10, replace=TRUE)
sample(1:10, 10)
sample(1:10, 4)
sample(1:10, 4)
sample(1:10, replace=TRUE)
str(sample)
sample(1:10, 4, replace=TRUE)
sample(1:10, 4, replace=TRUE, prob=.1)
q()
system.time(readLines(http://filgoal.com))
system.time(readLines("http://filgoal.com"))
x <- readLines("http://filgoal.com")
x
system.time(readLines("http://www.jhsph.edu"))
hilbert <- function(n) {}
hilbert <- function(n) {}
hilbert <- function(n) {
i <- 1:n
1/ outer(i - 1, i, "+")
}
x <- hilbert(1000)
system.time(svd(x))
system.time({n <- 1000})
system.time({
n <- 1000
r <- numeric(n)
for (i in 1:n) {
x <- rnorm(n)
r <- mean(x)
}
})
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
x <= matrix(1:10, 2, 5)
x <- matrix(1:10, 2, 5)
q()
library(BayesTree)
q()
?runif
runif(10)
runif(10, min=-1, max=1)
q()
setwd("~/Dropbox/learning_from_data/homework/hw4")
asdfa
exit()
